@model IEnumerable<ProyectoNFTs.Application.DTOs.TarjetaDTO>

@{
    ViewData["Title"] = "Index";
}

<h1>Listado de Tarjetas</h1>
<p>
    <a asp-action="Create" class="btn btn-primary bi bi-plus-circle">Agregar Nuevo</a>
</p>
<div class="table-responsive">
    <table id="sortable" class="table table-striped table-hover table-responsive-md table-sm mt-3" style="border-radius: 6px; overflow: hidden; font-size:medium">
        <thead style="background-color: black; color: #fff; cursor:pointer ; height: 50px;text-align: left; vertical-align: middle;">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.IdTarjeta)
                </th>
                <th onclick="sortBy(0)" style="cursor:pointer">
                    @Html.DisplayNameFor(model => model.Descripcion)
                </th>
                <th onclick="sortBy(0)" style="cursor:pointer">
                    @Html.DisplayNameFor(model => model.Estado)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.IdTarjeta)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Descripcion)
                    </td>
                    <td>
                        @{
                            string estadoTexto = item.Estado ? "Habilitado" : "Deshabilitado";
                        }
                        @estadoTexto
                    </td>

                    <td>
                        <div class="btn container">
                            @Html.ActionLink("Actualizar", "Edit", new { id = item.IdTarjeta }, new { @class = "btn btn-success   bi-pencil-square   " }) |
                            <!--https://www.learnrazorpages.com/razor-pages/ajax/unobtrusive-ajax-->
                            <a data-ajax="true" class="btn btn-secondary bi-eye-fill"
                               data-ajax-complete="onComplete"
                               data-ajax-mode="replace"
                               href='@Url.Action("Details", "Tarjeta", new { id  = item.IdTarjeta })'>
                                Detalles
                            </a> |
                            <button type="button" class="btn btn-danger bi bi-trash" onclick="deleteItem('@item.IdTarjeta')">Eliminar</button>
                            @*  @Html.ActionLink("Eliminar", "Delete", new { id = item.IdTarjeta }, new { @class = "btn btn-danger   bi-trash  " }) *@
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div id="showData"></div>

@section scripts {

    <script type="text/javascript">

        function deleteItem(id) {
            Swal.fire({
                title: '¿Eliminar NFT?',
                html: '¿Está seguro de que quieres eliminar la tarjeta <strong>' + id + '</strong>?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Sí, eliminarlo',
                cancelButtonText: 'Cancelar'

            }).then((result) => {
                if (result.isConfirmed) {

                    const myRequest = "/Tarjeta/Delete?id=" + id
                    fetch(myRequest, {
                        method: 'GET',
                    })
                        .then((response) => response.text())
                        .then((text) => {
                            Swal.fire({
                                title: '¡Registro eliminado correctamente!',
                                icon: 'success',
                                showConfirmButton: true, // No mostrar el botón de confirmación
                                timer: 2000,
                                timerProgressBar: true
                            });
                            console.log(text);
                            // Retrasar la recarga de la página para que espere el temporizador del Swal.fire
                            setTimeout(() => {
                                location.reload();
                            }, 2000); // Esto espera 2000 milisegundos (2 segundos) antes de recargar la página
                            // Eliminar la fila correspondiente de la tabla
                            document.getElementById('row_' + id).remove();
                        });
                }
            })
        };

        function onComplete(data) {
            Swal.fire({
                title: 'Detalle ',
                html: data.responseText,
                showDenyButton: false,
                showCancelButton: false,
                timer: 5000,
                timerProgressBar: true
            })
        }
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}